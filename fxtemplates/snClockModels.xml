<beast version="2.7" namespace="beast.base.core:beast.base.inference:
                     beast.base.evolution.branchratemodel:beast.base.evolution.speciation:
                     beast.base.evolution.tree.coalescent:beast.base.inference.util:
                     beast.evolution.nuc:beast.base.evolution.operator:beast.base.inference.operator:
                     beast.base.evolution.sitemodel:beast.base.evolution.substitutionmodel:
                     beast.base.evolution.likelihood:beast.evolution:beast.base.inference.distribution:
                     speciesnetwork.operators:speciesnetwork.utils:speciesnetwork.simulator:speciesnetwork">

	<mergewith point="snClockModelTemplates">
		<!-- Plain ol' strict clock -->
		<subtemplate id="StrictClock" class="beast.base.evolution.branchratemodel.StrictClockModel" mainid="StrictClock.c:$(n)">
<![CDATA[
			<branchRateModel spec="StrictClockModel" id="StrictClock.c:$(n)">
				<clock.rate id="strictClockRate.c:$(n)" spec="parameter.RealParameter" lower="0.0" value="1.0" estimate="true"/>
			</branchRateModel>

			<operator id="clockRateScaler.c:$(n)" spec="ScaleOperator" scaleFactor="0.5" weight="3.0" parameter="@strictClockRate.c:$(n)"/>
			<operator id="strictUpDownAndEmbed.c:$(n)" spec="speciesnetwork.operators.RebuildEmbedding" taxonset="@taxonsuperset" speciesNetwork="@Network.t:Species" geneTree="@Tree.t:$(n)" weight="3.0">
				<operator id="strictUpDown.c:$(n)" spec="UpDownOperator" scaleFactor="0.95" weight="0.0">
					<up idref="strictClockRate.c:$(n)"/>
					<down idref="Tree.t:$(n)"/>
				</operator>
			</operator>

			<prior id="clockRatePrior.c:$(n)" x="@strictClockRate.c:$(n)">
				<distr spec="beast.base.inference.distribution.LogNormalDistributionModel" meanInRealSpace="true">
					<S id="clockRatePriorStdev.s:$(n)" spec="parameter.RealParameter" lower="0.0" value="0.6" estimate="false"/>
					<M id="clockRatePriorMean.s:$(n)" spec="parameter.RealParameter" lower="0.0" value="1.0" estimate="false"/>
				</distr>
			</prior>
]]>

			<connect srcID="strictClockRate.c:$(n)" targetID="state" inputName="stateNode" if="inposterior(StrictClock.c:$(n)) and strictClockRate.c:$(n)/estimate=true"/>

			<connect srcID="clockRatePrior.c:$(n)" targetID="prior" inputName="distribution" if="inlikelihood(strictClockRate.c:$(n)) and strictClockRate.c:$(n)/estimate=true">
				Prior on the overall clock rate of partition c:$(n)
			</connect>
			<connect srcID="clockRateScaler.c:$(n)" targetID="mcmc" inputName="operator" if="inposterior(strictClockRate.c:$(n)) and strictClockRate.c:$(n)/estimate=true"/>
			<connect srcID="strictUpDownAndEmbed.c:$(n)" targetID="mcmc" inputName="operator" if="inlikelihood(strictClockRate.c:$(n)) and inlikelihood(Tree.t:$(n)) and strictClockRate.c:$(n)/estimate=true and Tree.t:$(n)/estimate=true">
				Scale up substitution rate c:$(n) and scale down tree t:($n)
			</connect>
			<connect srcID="strictClockRate.c:$(n)" targetID="strictUpDown.c:$(n)" inputName="up" if="inlikelihood(strictClockRate.c:$(n)) and strictClockRate.c:$(n)/estimate=true"/>

			<connect srcID="strictClockRate.c:$(n)" targetID="tracelog" inputName="log" if="inlikelihood(strictClockRate.c:$(n)) and strictClockRate.c:$(n)/estimate=true"/>
		</subtemplate>

		<!-- UCLN relaxed clock that applies to each gene tree branch -->
		<subtemplate id="Uncorrelated Lognormal" class="beast.base.evolution.branchratemodel.UCRelaxedClockModel" mainid="GeneTreeUCLN.c:$(n)">
<![CDATA[
			<branchRateModel id="GeneTreeUCLN.c:$(n)" spec="beast.base.evolution.branchratemodel.UCRelaxedClockModel" tree="@Tree.t:$(n)">
				<clock.rate id="uclnClockRate.c:$(n)" spec="parameter.RealParameter" lower="0.0" value="1.0" estimate="true"/>
				<rateCategories dimension="10" value="1" estimate="true" id="uclnBranchRates.c:$(n)" spec="parameter.IntegerParameter"/>
				<distr spec="beast.base.inference.distribution.LogNormalDistributionModel" meanInRealSpace="true" M="1.0">
					<parameter name="S" id="uclnBranchRatesStdev.c:$(n)" lower="0.01" value="0.3" estimate="false" />
				</distr>
			</branchRateModel>

			<operator id="uclnClockRateScaler.c:$(n)" spec="ScaleOperator" scaleFactor="0.5" weight="3.0" parameter="@uclnClockRate.c:$(n)"/>
			<operator id="uclnBranchRatesStdevScaler.c:$(n)" spec="ScaleOperator" scaleFactor="0.75" weight="3.0" parameter="@uclnBranchRatesStdev.c:$(n)"/>

			<operator id="uclnUpDownAndEmbed.c:$(n)" spec="speciesnetwork.operators.RebuildEmbedding" taxonset="@taxonsuperset" speciesNetwork="@Network.t:Species" geneTree="@Tree.t:$(n)" weight="3.0">
				<operator id="uclnUpDown.c:$(n)" spec="UpDownOperator" scaleFactor="0.95" weight="0.0">
					<up idref="uclnClockRate.c:$(n)"/>
					<down idref="Tree.t:$(n)"/>
				</operator>
			</operator>

			<operator id="uclnBranchRatesCycle.c:$(n)" spec="SwapOperator" howMany="1" intparameter="@uclnBranchRates.c:$(n)" weight="9.0" />
			<operator id="uclnBranchRatesUniform.c:$(n)" spec="UniformOperator" parameter="@uclnBranchRates.c:$(n)" weight="9.0" />

			<prior id="uclnClockRatePrior.c:$(n)" x="@uclnClockRate.c:$(n)">
				<distr spec="beast.base.inference.distribution.LogNormalDistributionModel" meanInRealSpace="true">
					<S id="uclnClockRatePriorStdev.s:$(n)" spec="parameter.RealParameter" lower="0.0" value="0.6" estimate="false"/>
					<M id="uclnClockRatePriorMean.s:$(n)" spec="parameter.RealParameter" lower="0.0" value="1.0" estimate="false"/>
				</distr>
			</prior>

			<prior id="uclnBranchRatesStdevPrior.c:$(n)" x="@uclnBranchRatesStdev.c:$(n)">
				<distr spec="beast.base.inference.distribution.Exponential">
					<mean id="uclnBranchRatesStdevPriorMean.s:$(n)" spec="parameter.RealParameter" lower="0.0" value="1.0" estimate="false"/>
				</distr>
			</prior>
]]>

			<connect srcID="uclnClockRate.c:$(n)" targetID="state" inputName="stateNode" if="inposterior(GeneTreeUCLN.c:$(n)) and uclnClockRate.c:$(n)/estimate=true"/>
			<connect srcID="uclnBranchRates.c:$(n)" targetID="state" inputName="stateNode" if="inposterior(GeneTreeUCLN.c:$(n)) and uclnBranchRates.c:$(n)/estimate=true"/>
			<connect srcID="uclnBranchRatesStdev.c:$(n)" targetID="state" inputName="stateNode" if="inposterior(GeneTreeUCLN.c:$(n)) and uclnBranchRatesStdev.c:$(n)/estimate=true"/>

			<connect srcID="uclnClockRatePrior.c:$(n)" targetID="prior" inputName="distribution" if="inlikelihood(uclnClockRate.c:$(n)) and uclnClockRate.c:$(n)/estimate=true">
				Prior on the overall clock rate of partition c:$(n)
			</connect>
			<connect srcID="uclnBranchRatesStdevPrior.c:$(n)" targetID="prior" inputName="distribution" if="inlikelihood(uclnBranchRates.c:$(n)) and uclnBranchRatesStdev.c:$(n)/estimate=true">
				Prior on the spread of branch rates of partition c:$(n)
			</connect>

			<connect srcID="uclnClockRateScaler.c:$(n)" targetID="mcmc" inputName="operator" if="inlikelihood(uclnClockRate.c:$(n)) and uclnClockRate.c:$(n)/estimate=true">
				Scale substitution rate of partition c:$(n)
			</connect>
			<connect srcID="uclnBranchRatesStdevScaler.c:$(n)" targetID="mcmc" inputName="operator" if="inlikelihood(uclnBranchRates.c:$(n)) and uclnBranchRatesStdev.c:$(n)/estimate=true">
				Scale substitution rate of partition c:$(n)
			</connect>

			<connect srcID="uclnUpDownAndEmbed.c:$(n)" targetID="mcmc" inputName="operator" if="inlikelihood(uclnClockRate.c:$(n)) and inlikelihood(Tree.t:$(n)) and uclnClockRate.c:$(n)/estimate=true and Tree.t:$(n)/estimate=true">
				Scale up substitution rate c:$(n) and scale down tree t:($n)
			</connect>
			<connect srcID="uclnClockRate.c:$(n)" targetID="uclnUpDown.c:$(n)" inputName="up" if="inlikelihood(uclnClockRate.c:$(n)) and uclnClockRate.c:$(n)/estimate=true"/>

			<connect srcID="uclnBranchRatesCycle.c:$(n)" targetID="mcmc" inputName="operator" if="inlikelihood(uclnBranchRates.c:$(n)) and uclnBranchRates.c:$(n)/estimate=true">
				Cycle the substitution rates around a subset of branches by one step
			</connect>
			<connect srcID="uclnBranchRatesUniform.c:$(n)" targetID="mcmc" inputName="operator" if="inlikelihood(uclnBranchRates.c:$(n)) and uclnBranchRates.c:$(n)/estimate=true">
				Sample the substitution rate category uniformly
			</connect>

			<connect srcID="uclnClockRate.c:$(n)" targetID="tracelog" inputName="log" if="inlikelihood(uclnClockRate.c:$(n)) and uclnClockRate.c:$(n)/estimate=true"/>
			<connect srcID="uclnBranchRatesStdev.c:$(n)" targetID="tracelog" inputName="log" if="inlikelihood(uclnBranchRates.c:$(n)) and uclnBranchRatesStdev.c:$(n)/estimate=true"/>

			<connect srcID="GeneTreeUCLN.c:$(n)" targetID="TreeWithMetaDataLogger.t:$(n)" inputName="branchratemodel" if="inlikelihood(GeneTreeUCLN.c:$(n))"/>
		</subtemplate>

		<!-- UCED relaxed clock that applies to each gene tree branch -->
		<subtemplate id="Uncorrelated Exponential" class="beast.base.evolution.branchratemodel.UCRelaxedClockModel" mainid="GeneTreeUCED.c:$(n)">
<![CDATA[
			<branchRateModel id="GeneTreeUCED.c:$(n)" spec="beast.base.evolution.branchratemodel.UCRelaxedClockModel" tree="@Tree.t:$(n)">
				<clock.rate id="ucedClockRate.c:$(n)" spec="parameter.RealParameter" lower="0.0" value="1.0" estimate="true"/>
				<rateCategories dimension="10" value="1" estimate="true" id="ucedBranchRates.c:$(n)" spec="parameter.IntegerParameter"/>
				<distr spec="beast.base.inference.distribution.Exponential" mean="1.0"/>
			</branchRateModel>

			<operator id="ucedClockRateScaler.c:$(n)" spec="ScaleOperator" scaleFactor="0.5" weight="3.0" parameter="@ucedClockRate.c:$(n)"/>

			<operator id="ucedUpDownAndEmbed.c:$(n)" spec="speciesnetwork.operators.RebuildEmbedding" taxonset="@taxonsuperset" speciesNetwork="@Network.t:Species" geneTree="@Tree.t:$(n)" weight="3.0">
				<operator id="ucedUpDown.c:$(n)" spec="UpDownOperator" scaleFactor="0.95" weight="0.0">
					<up idref="ucedClockRate.c:$(n)"/>
					<down idref="Tree.t:$(n)"/>
				</operator>
			</operator>

			<operator id="ucedBranchRatesCycle.c:$(n)" spec="SwapOperator" howMany="1" intparameter="@ucedBranchRates.c:$(n)" weight="9.0" />
			<operator id="ucedBranchRatesUniform.c:$(n)" spec="UniformOperator" parameter="@ucedBranchRates.c:$(n)" weight="9.0" />

			<prior id="ucedClockRatePrior.c:$(n)" x="@ucedClockRate.c:$(n)">
				<distr spec="beast.base.inference.distribution.LogNormalDistributionModel" meanInRealSpace="true">
					<S id="ucedClockRatePriorStdev.s:$(n)" spec="parameter.RealParameter" lower="0.0" value="0.6" estimate="false"/>
					<M id="ucedClockRatePriorMean.s:$(n)" spec="parameter.RealParameter" lower="0.0" value="1.0" estimate="false"/>
				</distr>
			</prior>
]]>

			<connect srcID="ucedClockRate.c:$(n)" targetID="state" inputName="stateNode" if="inposterior(GeneTreeUCED.c:$(n)) and ucedClockRate.c:$(n)/estimate=true"/>
			<connect srcID="ucedBranchRates.c:$(n)" targetID="state" inputName="stateNode" if="inposterior(GeneTreeUCED.c:$(n)) and ucedBranchRates.c:$(n)/estimate=true"/>

			<connect srcID="ucedClockRatePrior.c:$(n)" targetID="prior" inputName="distribution" if="inlikelihood(ucedClockRate.c:$(n)) and ucedClockRate.c:$(n)/estimate=true">
				Prior on the overall clock rate of partition c:$(n)
			</connect>

			<connect srcID="ucedClockRateScaler.c:$(n)" targetID="mcmc" inputName="operator" if="inlikelihood(ucedClockRate.c:$(n)) and ucedClockRate.c:$(n)/estimate=true">
				Scale substitution rate of partition c:$(n)
			</connect>

			<connect srcID="ucedUpDownAndEmbed.c:$(n)" targetID="mcmc" inputName="operator" if="inlikelihood(ucedClockRate.c:$(n)) and inlikelihood(Tree.t:$(n)) and ucedClockRate.c:$(n)/estimate=true and Tree.t:$(n)/estimate=true">
				Scale up substitution rate c:$(n) and scale down tree t:($n)
			</connect>
			<connect srcID="ucedClockRate.c:$(n)" targetID="ucedUpDown.c:$(n)" inputName="up" if="inlikelihood(ucedClockRate.c:$(n)) and ucedClockRate.c:$(n)/estimate=true"/>

			<connect srcID="ucedBranchRatesCycle.c:$(n)" targetID="mcmc" inputName="operator" if="inlikelihood(ucedBranchRates.c:$(n)) and ucedBranchRates.c:$(n)/estimate=true">
				Cycle the substitution rates around a subset of branches by one step
			</connect>
			<connect srcID="ucedBranchRatesUniform.c:$(n)" targetID="mcmc" inputName="operator" if="inlikelihood(ucedBranchRates.c:$(n)) and ucedBranchRates.c:$(n)/estimate=true">
				Sample the substitution rate category uniformly
			</connect>

			<connect srcID="ucedClockRate.c:$(n)" targetID="tracelog" inputName="log" if="inlikelihood(ucedClockRate.c:$(n)) and ucedClockRate.c:$(n)/estimate=true"/>

			<connect srcID="GeneTreeUCED.c:$(n)" targetID="TreeWithMetaDataLogger.t:$(n)" inputName="branchratemodel" if="inlikelihood(GeneTreeUCED.c:$(n))"/>
		</subtemplate>
	</mergewith>

</beast>
