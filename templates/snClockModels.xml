<beast version="2.0" namespace="beast.app.beauti:beast.core:beast.evolution.branchratemodel:beast.evolution.speciation:beast.evolution.tree.coalescent:beast.core.util:beast.evolution.nuc:beast.evolution.operators:beast.evolution.sitemodel:beast.evolution.substitutionmodel:beast.evolution.likelihood:beast.evolution:beast.math.distributions">

    <mergewith point="snClockModelTemplates">
        <!-- Plain ol' strict clock -->
        <subtemplate id="StrictClock" class="beast.evolution.branchratemodel.StrictClockModel" mainid="StrictClock.c:$(n)">
            <![CDATA[
            <branchRateModel spec="StrictClockModel" id="StrictClock.c:$(n)">
                <clock.rate id="strictClockRate.c:$(n)" spec="parameter.RealParameter" lower="0.0" value="1.0" estimate="true"/>
            </branchRateModel>

            <operator id="clockRateScaler.c:$(n)" spec="ScaleOperator" scaleFactor="0.5" weight="3.0" parameter="@strictClockRate.c:$(n)"/>

            <prior id="clockRatePrior.c:$(n)" x="@strictClockRate.c:$(n)">
                <distr spec="beast.math.distributions.LogNormalDistributionModel" meanInRealSpace="true">
                    <M id="clockRatePriorMean.s:$(n)" spec="parameter.RealParameter" lower="0.0" value="1.0" estimate="false"/>
                    <S id="clockRatePriorStdev.s:$(n)" spec="parameter.RealParameter" lower="0.0" value="0.6" estimate="false"/>
                </distr>
            </prior>
]]>

            <connect srcID="strictClockRate.c:$(n)" targetID="state" inputName="stateNode" if="inposterior(StrictClock.c:$(n)) and strictClockRate.c:$(n)/estimate=true"/>

            <connect srcID="clockRatePrior.c:$(n)" targetID="prior" inputName="distribution" if="inlikelihood(strictClockRate.c:$(n)) and strictClockRate.c:$(n)/estimate=true">
                Prior on the overall clock rate of partition c:$(n)
            </connect>
            <connect srcID="clockRateScaler.c:$(n)" targetID="mcmc" inputName="operator" if="inposterior(strictClockRate.c:$(n)) and strictClockRate.c:$(n)/estimate=true"/>

            <connect srcID="strictClockRate.c:$(n)" targetID="tracelog" inputName="log" if="inlikelihood(strictClockRate.c:$(n)) and strictClockRate.c:$(n)/estimate=true"/>
        </subtemplate>

        <!-- UCLN relaxed clock that applies to each gene tree branch -->
        <subtemplate id="Uncorrelated Lognormal" class="beast.evolution.branchratemodel.UCRelaxedClockModel" mainid="GeneTreeUCLN.c:$(n)">
            <![CDATA[
            <branchRateModel id="GeneTreeUCLN.c:$(n)" spec="beast.evolution.branchratemodel.UCRelaxedClockModel" tree="@Tree.t:$(n)">
                <clock.rate id="uclnClockRate.c:$(n)" spec="parameter.RealParameter" lower="0.0" value="1.0" estimate="true"/>
                <rateCategories dimension="10" value="1" estimate="true" id="uclnBranchRates.c:$(n)" spec="parameter.IntegerParameter"/>
                <distr spec="beast.math.distributions.LogNormalDistributionModel" meanInRealSpace="true" M="1.0">
                    <parameter name="S" id="uclnBranchRatesStdev.c:$(n)" lower="0.01" value="0.3" estimate="false" />
                </distr>
            </branchRateModel>

            <operator id="uclnClockRateScaler.c:$(n)" spec="ScaleOperator" scaleFactor="0.5" weight="3.0" parameter="@uclnClockRate.c:$(n)"/>
            <operator id="uclnBranchRatesStdevScaler.c:$(n)" spec="ScaleOperator" scaleFactor="0.75" weight="3.0" parameter="@uclnBranchRatesStdev.c:$(n)"/>

            <operator id="uclnBranchRatesCycle.c:$(n)" spec="SwapOperator" howMany="1" intparameter="@uclnBranchRates.c:$(n)" weight="9.0" />
            <operator id="uclnBranchRatesUniform.c:$(n)" spec="UniformOperator" parameter="@uclnBranchRates.c:$(n)" weight="9.0" />

            <prior id="uclnClockRatePrior.c:$(n)" x="@uclnClockRate.c:$(n)">
                <distr spec="beast.math.distributions.LogNormalDistributionModel" meanInRealSpace="true">
                    <M id="uclnClockRatePriorMean.s:$(n)" spec="parameter.RealParameter" lower="0.0" value="1.0" estimate="false"/>
                    <S id="uclnClockRatePriorStdev.s:$(n)" spec="parameter.RealParameter" lower="0.0" value="0.6" estimate="false"/>
                </distr>
            </prior>

            <prior id="uclnBranchRatesStdevPrior.c:$(n)" x="@uclnBranchRatesStdev.c:$(n)">
                <distr spec="beast.math.distributions.Exponential">
                    <mean id="uclnBranchRatesStdevPriorMean.s:$(n)" spec="parameter.RealParameter" lower="0.0" value="1.0" estimate="false"/>
                </distr>
            </prior>
]]>

            <connect srcID="uclnClockRate.c:$(n)" targetID="state" inputName="stateNode" if="inposterior(GeneTreeUCLN.c:$(n)) and uclnClockRate.c:$(n)/estimate=true"/>
            <connect srcID="uclnBranchRates.c:$(n)" targetID="state" inputName="stateNode" if="inposterior(GeneTreeUCLN.c:$(n)) and uclnBranchRates.c:$(n)/estimate=true"/>
            <connect srcID="uclnBranchRatesStdev.c:$(n)" targetID="state" inputName="stateNode" if="inposterior(GeneTreeUCLN.c:$(n)) and uclnBranchRatesStdev.c:$(n)/estimate=true"/>

            <connect srcID="uclnClockRatePrior.c:$(n)" targetID="prior" inputName="distribution" if="inlikelihood(uclnClockRate.c:$(n)) and uclnClockRate.c:$(n)/estimate=true">
                Prior on the overall clock rate of partition c:$(n)
            </connect>
            <connect srcID="uclnBranchRatesStdevPrior.c:$(n)" targetID="prior" inputName="distribution" if="inlikelihood(uclnBranchRates.c:$(n)) and uclnBranchRatesStdev.c:$(n)/estimate=true">
                Prior on the spread of branch rates of partition c:$(n)
            </connect>

            <connect srcID="uclnClockRateScaler.c:$(n)" targetID="mcmc" inputName="operator" if="inlikelihood(uclnClockRate.c:$(n)) and uclnClockRate.c:$(n)/estimate=true">
                Scale substitution rate of partition c:$(n)
            </connect>
            <connect srcID="uclnBranchRatesStdevScaler.c:$(n)" targetID="mcmc" inputName="operator" if="inlikelihood(uclnBranchRates.c:$(n)) and uclnBranchRatesStdev.c:$(n)/estimate=true">
                Scale substitution rate of partition c:$(n)
            </connect>

            <connect srcID="uclnBranchRatesCycle.c:$(n)" targetID="mcmc" inputName="operator" if="inlikelihood(uclnBranchRates.c:$(n)) and uclnBranchRates.c:$(n)/estimate=true">
                Cycle the substitution rates around a subset of branches by one step
            </connect>
            <connect srcID="uclnBranchRatesUniform.c:$(n)" targetID="mcmc" inputName="operator" if="inlikelihood(uclnBranchRates.c:$(n)) and uclnBranchRates.c:$(n)/estimate=true">
                Sample the substitution rate category uniformly
            </connect>

            <connect srcID="uclnClockRate.c:$(n)" targetID="tracelog" inputName="log" if="inlikelihood(uclnClockRate.c:$(n)) and uclnClockRate.c:$(n)/estimate=true"/>
            <connect srcID="uclnBranchRatesStdev.c:$(n)" targetID="tracelog" inputName="log" if="inlikelihood(uclnBranchRates.c:$(n)) and uclnBranchRatesStdev.c:$(n)/estimate=true"/>

            <connect srcID="GeneTreeUCLN.c:$(n)" targetID="TreeWithMetaDataLogger.t:$(n)" inputName="branchratemodel" if="inlikelihood(GeneTreeUCLN.c:$(n))"/>
        </subtemplate>
    </mergewith>

</beast>
